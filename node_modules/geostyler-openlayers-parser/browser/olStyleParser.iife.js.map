{"version":3,"file":"olStyleParser.iife.js","sources":["../node_modules/css-font-parser/dist/css-font-parser.modern.js","../node_modules/geostyler-style/dist/style.js","../node_modules/geostyler-style/dist/functions.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_root.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isArray.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isString.js","../node_modules/lodash/isNumber.js","../node_modules/lodash/isBoolean.js","../node_modules/geostyler-style/dist/typeguards.js","../node_modules/geostyler-style/dist/index.js","../node_modules/ol/ImageState.js","../node_modules/ol/events/Event.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/has.js","../node_modules/ol/AssertionError.js","../node_modules/ol/asserts.js","../node_modules/ol/transform.js","../node_modules/ol/extent.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/math.js","../node_modules/ol/proj.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/Point.js","../node_modules/ol/size.js","../node_modules/ol/style/Image.js","../node_modules/ol/color.js","../node_modules/ol/colorlike.js","../node_modules/ol/dom.js","../node_modules/ol/render/canvas.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/Image.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/style/Icon.js","../src/Util/colors.ts","../src/Util/OlStyleUtil.ts","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render.js","../src/OlStyleParser.ts"],"sourcesContent":["function e(e){return!/^(-?\\d|--)/.test(e)}function t(t){const l=[];let n=\"\",s=\"\",f=7;for(let i,r=0;i=t.charAt(r);r++)if(/[a-zA-Z\\d\\xa0-\\uffff_-]/.test(i)&&7===f)n+=i;else if(\"\\\\\"===i&&7===f)f=6;else if(\" \"===i&&7===f){if(\"\"!==n){if(!e(n))return null;l.push(n),n=\"\"}}else if(6===f)/[0-9a-f]/i.test(i)?(s+=i,f=8):(n+=i,f=7);else{if(8!==f)return null;/[0-9a-f]/i.test(i)&&s.length<6?s+=i:(n+=String.fromCodePoint(parseInt(s,16)),n+=i,s=\"\",f=7)}if(\"\"!==n){if(!e(n))return null;l.push(n)}return l.join(\" \")}function l(e,l){let n=l,s=\"\";const f={\"font-family\":[]};for(let l,i=0;l=e.charAt(i);i+=1)if(4!==n||'\"'!==l&&\"'\"!==l)if(3===n&&\",\"===l)n=4,s=\"\";else if(4===n&&\",\"===l){const e=t(s);e&&f[\"font-family\"].push(e),s=\"\"}else if(5===n&&\" \"===l)/^(?:\\+|-)?(?:[0-9]*\\.)?[0-9]+(?:deg|grad|rad|turn)$/.test(s)?(f[\"font-style\"]+=\" \"+s,s=\"\"):i-=1,n=1;else if(1!==n||\" \"!==l&&\"/\"!==l)2===n&&\" \"===l?(/^(?:\\+|-)?([0-9]*\\.)?[0-9]+(?:em|ex|ch|rem|vh|vw|vmin|vmax|px|mm|cm|in|pt|pc|%)?$/.test(s)&&(f[\"line-height\"]=s),n=4,s=\"\"):s+=l;else{if(/^(?:(?:xx|x)-large|(?:xx|s)-small|small|large|medium)$/.test(s)||/^(?:larg|small)er$/.test(s)||/^(?:\\+|-)?(?:[0-9]*\\.)?[0-9]+(?:em|ex|ch|rem|vh|vw|vmin|vmax|px|mm|cm|in|pt|pc|%)$/.test(s))n=\"/\"===l?2:4,f[\"font-size\"]=s;else if(/^italic$/.test(s))f[\"font-style\"]=s;else if(/^oblique$/.test(s))f[\"font-style\"]=s,n=5;else if(/^small-caps$/.test(s))f[\"font-variant\"]=s;else if(/^(?:bold(?:er)?|lighter|normal)$/.test(s))f[\"font-weight\"]=s;else if(/^[+-]?(?:[0-9]*\\.)?[0-9]+(?:e[+-]?(?:0|[1-9][0-9]*))?$/.test(s)){const e=parseFloat(s);e>=1&&e<=1e3&&(f[\"font-weight\"]=s)}else/^(?:(?:ultra|extra|semi)-)?(?:condensed|expanded)$/.test(s)&&(f[\"font-stretch\"]=s);s=\"\"}else{let t=i+1;do{if(t=e.indexOf(l,t)+1,!t)return null}while(\"\\\\\"===e.charAt(t-2));f[\"font-family\"].push(e.slice(i+1,t-1).replace(/\\\\('|\")/g,\"$1\")),i=t-1,n=3,s=\"\"}if(3===n&&!/^\\s*$/.test(s))return null;if(4===n){const e=t(s);e&&f[\"font-family\"].push(e)}return f}function n(e){const t=l(e,4);return null!==t?t[\"font-family\"]:null}function s(e){const t=l(e,1);return null!==t&&t[\"font-size\"]&&t[\"font-family\"].length?t:null}export{s as parseFont,n as parseFontFamily};\n//# sourceMappingURL=css-font-parser.modern.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n;\n//# sourceMappingURL=style.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n//# sourceMappingURL=functions.js.map","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","\"use strict\";\n/**\n * Contains typeguards for geostyler-style\n * https://basarat.gitbook.io/typescript/type-system/typeguard#user-defined-type-guards\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isGeoStylerFunction = exports.isGeoStylerUnknownFunction = exports.isGeoStylerBooleanFunction = exports.isGeoStylerStringFunction = exports.isGeoStylerNumberFunction = exports.isGrayChannel = exports.isRgbChannel = exports.isRule = exports.isRasterSymbolizer = exports.isFillSymbolizer = exports.isLineSymbolizer = exports.isMarkSymbolizer = exports.isTextSymbolizer = exports.isIconSymbolizer = exports.isPointSymbolizer = exports.isSymbolizer = exports.isNegationFilter = exports.isCombinationFilter = exports.isComparisonFilter = exports.isFilter = exports.isNegationOperator = exports.isCombinationOperator = exports.isComparisonOperator = exports.isOperator = exports.isScaleDenominator = exports.isPropertyType = exports.isFunctionCall = exports.isExpression = void 0;\nvar isString_1 = __importDefault(require(\"lodash/isString\"));\nvar isNumber_1 = __importDefault(require(\"lodash/isNumber\"));\nvar isBoolean_1 = __importDefault(require(\"lodash/isBoolean\"));\nvar isExpression = function (got) {\n    return (0, exports.isGeoStylerFunction)(got) || (0, exports.isPropertyType)(got);\n};\nexports.isExpression = isExpression;\n/**\n * @deprecated use isFunction instead\n */\nvar isFunctionCall = function (got) {\n    return got.type === 'functioncall' &&\n        got.hasOwnProperty('name') &&\n        (0, isString_1.default)(got.name) &&\n        got.hasOwnProperty('args') &&\n        Array.isArray(got.args) &&\n        got.args.every(function (arg) { return (0, exports.isExpression)(arg); });\n};\nexports.isFunctionCall = isFunctionCall;\n// PropertyValue\nvar isPropertyType = function (got) {\n    return (0, isString_1.default)(got) || (0, isNumber_1.default)(got) || (0, isBoolean_1.default)(got) || got === null;\n};\nexports.isPropertyType = isPropertyType;\n// ScaleDenominator\nvar isScaleDenominator = function (got) {\n    return !!(((got === null || got === void 0 ? void 0 : got.min) || (got === null || got === void 0 ? void 0 : got.max)) &&\n        ((!!got.min) ? (0, exports.isGeoStylerNumberFunction)(got.min) || (0, isNumber_1.default)(got.min) : true) &&\n        ((!!got.max) ? (0, exports.isGeoStylerNumberFunction)(got.max) || (0, isNumber_1.default)(got.min) : true));\n};\nexports.isScaleDenominator = isScaleDenominator;\n// Operators\nvar isOperator = function (got) {\n    return (0, exports.isComparisonOperator)(got) ||\n        (0, exports.isCombinationOperator)(got) ||\n        (0, exports.isNegationOperator)(got);\n};\nexports.isOperator = isOperator;\nvar isComparisonOperator = function (got) {\n    return ['==', '*=', '!=', '<', '<=', '>', '>=', '<=x<='].includes(got);\n};\nexports.isComparisonOperator = isComparisonOperator;\nvar isCombinationOperator = function (got) {\n    return ['&&', '||'].includes(got);\n};\nexports.isCombinationOperator = isCombinationOperator;\nvar isNegationOperator = function (got) {\n    return got === '!';\n};\nexports.isNegationOperator = isNegationOperator;\n// Filters\nvar isFilter = function (got) {\n    return (0, exports.isComparisonFilter)(got) ||\n        (0, exports.isCombinationFilter)(got) ||\n        (0, exports.isGeoStylerBooleanFunction)(got) ||\n        (0, exports.isNegationFilter)(got) ||\n        (0, exports.isGeoStylerBooleanFunction)(got) ||\n        (0, isBoolean_1.default)(got);\n};\nexports.isFilter = isFilter;\nvar isComparisonFilter = function (got) {\n    var expectedLength = got && got[0] === '<=x<=' ? 4 : 3;\n    return (Array.isArray(got) &&\n        got.length === expectedLength &&\n        (0, exports.isComparisonOperator)(got[0]) &&\n        (0, exports.isExpression)(got[1]) &&\n        (0, exports.isExpression)(got[2]) &&\n        (got[0] !== '<=x<=' || (0, isNumber_1.default)(got[3])));\n};\nexports.isComparisonFilter = isComparisonFilter;\nvar isCombinationFilter = function (got) {\n    return Array.isArray(got) &&\n        got.length >= 3 &&\n        (0, exports.isCombinationOperator)(got[0]) &&\n        got.every(function (arg, index) { return index === 0 || (0, exports.isFilter)(arg); });\n};\nexports.isCombinationFilter = isCombinationFilter;\nvar isNegationFilter = function (got) {\n    return Array.isArray(got) &&\n        got.length === 2 &&\n        (0, exports.isNegationOperator)(got[0]) &&\n        (0, exports.isFilter)(got[1]);\n};\nexports.isNegationFilter = isNegationFilter;\n// Symbolizers\nvar isSymbolizer = function (got) {\n    return (0, exports.isPointSymbolizer)(got) ||\n        (0, exports.isLineSymbolizer)(got) ||\n        (0, exports.isFillSymbolizer)(got) ||\n        (0, exports.isRasterSymbolizer)(got);\n};\nexports.isSymbolizer = isSymbolizer;\nvar isPointSymbolizer = function (got) {\n    return (0, exports.isIconSymbolizer)(got) || (0, exports.isMarkSymbolizer)(got) || (0, exports.isTextSymbolizer)(got);\n};\nexports.isPointSymbolizer = isPointSymbolizer;\nvar isIconSymbolizer = function (got) {\n    return (got === null || got === void 0 ? void 0 : got.kind) === 'Icon';\n};\nexports.isIconSymbolizer = isIconSymbolizer;\nvar isTextSymbolizer = function (got) {\n    return (got === null || got === void 0 ? void 0 : got.kind) === 'Text';\n};\nexports.isTextSymbolizer = isTextSymbolizer;\nvar isMarkSymbolizer = function (got) {\n    return (got === null || got === void 0 ? void 0 : got.kind) === 'Mark' && (0, isString_1.default)(got === null || got === void 0 ? void 0 : got.wellKnownName);\n};\nexports.isMarkSymbolizer = isMarkSymbolizer;\nvar isLineSymbolizer = function (got) {\n    return (got === null || got === void 0 ? void 0 : got.kind) === 'Line';\n};\nexports.isLineSymbolizer = isLineSymbolizer;\nvar isFillSymbolizer = function (got) {\n    return (got === null || got === void 0 ? void 0 : got.kind) === 'Fill';\n};\nexports.isFillSymbolizer = isFillSymbolizer;\nvar isRasterSymbolizer = function (got) {\n    return (got === null || got === void 0 ? void 0 : got.kind) === 'Raster';\n};\nexports.isRasterSymbolizer = isRasterSymbolizer;\n// Rule\nvar isRule = function (got) {\n    var _a;\n    return !!((0, isString_1.default)(got === null || got === void 0 ? void 0 : got.name) &&\n        ((got === null || got === void 0 ? void 0 : got.filter) ? (0, exports.isFilter)(got.filter) : true) &&\n        ((got === null || got === void 0 ? void 0 : got.scaleDenominator) ? (0, exports.isScaleDenominator)(got.scaleDenominator) : true) &&\n        ((_a = got === null || got === void 0 ? void 0 : got.symbolizers) === null || _a === void 0 ? void 0 : _a.every(function (arg) { return (0, exports.isSymbolizer)(arg); })));\n};\nexports.isRule = isRule;\n/**\n * Checks if ChannelSelection is of type RGBChannel.\n */\nvar isRgbChannel = function (got) {\n    return !!((got === null || got === void 0 ? void 0 : got.redChannel) !== undefined\n        || (got === null || got === void 0 ? void 0 : got.greenChannel) !== undefined\n        || (got === null || got === void 0 ? void 0 : got.blueChannel) !== undefined);\n};\nexports.isRgbChannel = isRgbChannel;\n/**\n * Checks if ChannelSelection is of type GrayChannel.\n */\nvar isGrayChannel = function (got) {\n    return !!((got === null || got === void 0 ? void 0 : got.grayChannel) !== undefined);\n};\nexports.isGrayChannel = isGrayChannel;\n// Functions\nvar isGeoStylerNumberFunction = function (got) {\n    var functionNames = [\n        'abs',\n        'acos',\n        'add',\n        'asin',\n        'atan',\n        'atan2',\n        'ceil',\n        'cos',\n        'div',\n        'exp',\n        'floor',\n        'log',\n        'max',\n        'min',\n        'modulo',\n        'mul',\n        'pi',\n        'pow',\n        'random',\n        'rint',\n        'round',\n        'sin',\n        'sqrt',\n        'strIndexOf',\n        'strLastIndexOf',\n        'strLength',\n        'sub',\n        'tan',\n        'toDegrees',\n        'toRadians'\n    ];\n    return functionNames.includes(got === null || got === void 0 ? void 0 : got.name);\n};\nexports.isGeoStylerNumberFunction = isGeoStylerNumberFunction;\nvar isGeoStylerStringFunction = function (got) {\n    var functionNames = [\n        'numberFormat',\n        'strAbbreviate',\n        'strCapitalize',\n        'strConcat',\n        'strDefaultIfBlank',\n        'strReplace',\n        'strStripAccents',\n        'strSubstring',\n        'strSubstringStart',\n        'strToLowerCase',\n        'strToUpperCase',\n        'strTrim'\n    ];\n    return functionNames.includes(got === null || got === void 0 ? void 0 : got.name);\n};\nexports.isGeoStylerStringFunction = isGeoStylerStringFunction;\nvar isGeoStylerBooleanFunction = function (got) {\n    var functionNames = [\n        'all',\n        'any',\n        'between',\n        'double2bool',\n        'equalTo',\n        'greaterThan',\n        'greaterThanOrEqualTo',\n        'in',\n        'lessThan',\n        'lessThanOrEqualTo',\n        'not',\n        'notEqualTo',\n        'parseBoolean',\n        'strEndsWith',\n        'strEqualsIgnoreCase',\n        'strMatches',\n        'strStartsWith'\n    ];\n    return functionNames.includes(got === null || got === void 0 ? void 0 : got.name);\n};\nexports.isGeoStylerBooleanFunction = isGeoStylerBooleanFunction;\nvar isGeoStylerUnknownFunction = function (got) {\n    var functionNames = [\n        'case',\n        'property',\n    ];\n    return functionNames.includes(got === null || got === void 0 ? void 0 : got.name);\n};\nexports.isGeoStylerUnknownFunction = isGeoStylerUnknownFunction;\nvar isGeoStylerFunction = function (got) {\n    return (0, exports.isGeoStylerBooleanFunction)(got) ||\n        (0, exports.isGeoStylerNumberFunction)(got) ||\n        (0, exports.isGeoStylerStringFunction)(got) ||\n        (0, exports.isGeoStylerUnknownFunction)(got);\n};\nexports.isGeoStylerFunction = isGeoStylerFunction;\n//# sourceMappingURL=typeguards.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./style\"), exports);\n__exportStar(require(\"./functions\"), exports);\n__exportStar(require(\"./typeguards\"), exports);\n//# sourceMappingURL=index.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.4.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * This is a copy of https://github.com/colorjs/color-name/blob/master/index.js.\n * To reduce dependencies and avoid to include a \"module\" package this simple copy\n * is used instead of the package itself.\n */\nexport const colors: {\n  [key: string]: [number, number, number];\n} = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\n","import {\n  Expression,\n  Fcase,\n  GeoStylerBooleanFunction,\n  GeoStylerFunction,\n  GeoStylerNumberFunction,\n  GeoStylerStringFunction,\n  GeoStylerUnknownFunction,\n  isGeoStylerBooleanFunction,\n  isGeoStylerFunction,\n  isGeoStylerNumberFunction,\n  isGeoStylerStringFunction,\n  isGeoStylerUnknownFunction,\n  MarkSymbolizer,\n  PropertyType,\n  Style,\n  TextSymbolizer\n} from 'geostyler-style';\nimport { Feature as OlFeature } from 'ol';\nimport { colors } from './colors';\n\nconst WELLKNOWNNAME_TTF_REGEXP = /^ttf:\\/\\/(.+)#(.+)$/;\nexport const DUMMY_MARK_SYMBOLIZER_FONT = 'geostyler-mark-symbolizer';\n\n/**\n * Offers some utility functions to work with OpenLayers Styles.\n */\nclass OlStyleUtil {\n\n  /**\n   * Transforms a HEX encoded color and an opacity value to a RGB(A) notation.\n   *\n   * @param colorString HEX encoded color\n   * @param opacity  Opacity (Betweeen 0 and 1)\n   * @return the RGB(A) value of the input color\n   */\n  public static getRgbaColor(colorString: string | GeoStylerStringFunction, opacity: number | GeoStylerNumberFunction) {\n    if (isGeoStylerStringFunction(colorString)) {\n      colorString = OlStyleUtil.evaluateStringFunction(colorString);\n    }\n\n    if (typeof(colorString) !== 'string') {\n      return;\n    }\n    if (colorString.startsWith('rgba(')) {\n      return colorString;\n    }\n\n    // check if is valid HEX color - see also here\n    // https://stackoverflow.com/questions/8027423/how-to-check-if-a-string-is-a-valid-hex-color-representation/8027444\n    const isHexColor = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(colorString);\n    if (!isHexColor) {\n      return;\n    }\n\n    const r = parseInt(colorString.slice(1, 3), 16);\n    const g = parseInt(colorString.slice(3, 5), 16);\n    const b = parseInt(colorString.slice(5, 7), 16);\n\n    if (isGeoStylerNumberFunction(opacity)) {\n      opacity = OlStyleUtil.evaluateNumberFunction(opacity);\n    }\n\n    if (opacity < 0) {\n      opacity = 1;\n    }\n\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + opacity + ')';\n  }\n\n  /**\n   * Splits a RGBA encoded color into its color values.\n   *\n   * @param {string} rgbaColor RGB(A) encoded color\n   * @return {number[]} Numeric color values as array\n   */\n  public static splitRgbaColor(rgbaColor: string): number[] {\n    const colorsOnly = rgbaColor.substring(rgbaColor.indexOf('(') + 1, rgbaColor.lastIndexOf(')')).split(/,\\s*/);\n    const red = parseInt(colorsOnly[0], 10);\n    const green = parseInt(colorsOnly[1], 10);\n    const blue = parseInt(colorsOnly[2], 10);\n    const opacity = parseFloat(colorsOnly[3]);\n\n    return [red, green, blue, opacity];\n  }\n\n  /**\n   * Transforms a RGB(A) or named color value to a HEX encoded notation.\n   * If a HEX color is provided it will be returned untransformed.\n   *\n   * @param {string} inColor The color to transform\n   * @return {string | undefined} The HEX color representation of the given color\n   */\n  public static getHexColor(inColor: string): string | undefined {\n    // if passing in a hex code we just return it\n    if (inColor.startsWith('#')) {\n      return inColor;\n    } else if (inColor.startsWith('rgb')) {\n      const colorArr = OlStyleUtil.splitRgbaColor(inColor);\n      return OlStyleUtil.getHexCodeFromRgbArray(colorArr);\n    } else if (colors[inColor.toLocaleLowerCase()] !== undefined) {\n      const rgbColorArr = colors[inColor.toLocaleLowerCase()];\n      return OlStyleUtil.getHexCodeFromRgbArray(rgbColorArr);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Returns the hex code for a given RGB(A) array.\n   *\n   * @param colorArr RGB(A) array. e.g. [255,0,0]\n   * @return {string} The HEX color representation of the given color\n   */\n  public static getHexCodeFromRgbArray(colorArr: number[]): string {\n    return '#' + colorArr.map((x, idx) => {\n      const hex = x.toString(16);\n      // skip opacity if passed as fourth entry\n      if (idx < 3) {\n        return hex.length === 1 ? '0' + hex : hex;\n      }\n      return '';\n    }).join('');\n  }\n\n  /**\n   * Returns the opacity value of a RGB(A) color value.\n   *\n   * @param rgbaColor RGBA encoded color\n   * @return {string | undefined} The opacity value of the given RGBA color\n   */\n  public static getOpacity(rgbaColor: string): number | undefined {\n    if (!rgbaColor.startsWith('rgba(')) {\n      return;\n    }\n\n    const colorArr = OlStyleUtil.splitRgbaColor(rgbaColor);\n\n    if (colorArr.length === 4) {\n      return colorArr[3];\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Returns an OL compliant font string.\n   *\n   * @param symbolizer The TextSymbolizer to derive the font string from\n   */\n  public static getTextFont(symbolizer: TextSymbolizer) {\n    const fontWeight = symbolizer.fontWeight ?? 'normal';\n    const fontStyle = symbolizer.fontStyle ?? 'normal';\n\n    const size = symbolizer.size;\n    const font = symbolizer.font;\n    return fontWeight + ' ' + fontStyle + ' ' + size + 'px ' + font?.join(', ');\n  }\n\n\n  /**\n   * Returns true if the given mark symbolizer is based on a font glyph\n   * (i.e. has a well known name property starting with 'ttf://').\n   *\n   * @param symbolizer The TextSymbolizer to derive the font string from\n   */\n  public static getIsFontGlyphBased(symbolizer: MarkSymbolizer) {\n    return WELLKNOWNNAME_TTF_REGEXP.test(symbolizer.wellKnownName);\n  }\n\n  /**\n   * Returns whether the given font (as used in the OpenLayers Text Style `font` property)\n   * is intended for a mark symbolizer or not.\n   * This is done by checking whether the dummy DUMMY_MARK_SYMBOLIZER_FONT font name is present.\n   *\n   * @param font The text font to analyze\n   */\n  public static getIsMarkSymbolizerFont(font: string) {\n    const search = DUMMY_MARK_SYMBOLIZER_FONT;\n    return font.substring(font.length - search.length, font.length) === search;\n  }\n\n  /**\n   * Returns an OL compliant font string, to be used for mark symbolizers\n   * using a font glyph.\n   * This also includes a dummy DUMMY_MARK_SYMBOLIZER_FONT font name at the end of the\n   * string to allow determining that this font was intended for a mark symbolizer\n   * later on.\n   *\n   * @param symbolizer The TextSymbolizer to derive the font string from\n   */\n  public static getTextFontForMarkSymbolizer(symbolizer: MarkSymbolizer) {\n    const parts = symbolizer.wellKnownName.match(WELLKNOWNNAME_TTF_REGEXP);\n    if (!parts) {\n      throw new Error(`Could not parse font-based well known name: ${symbolizer.wellKnownName}`);\n    }\n    const fontFamily = parts[1];\n    return `Normal ${symbolizer.radius || 5}px '${fontFamily}', ${DUMMY_MARK_SYMBOLIZER_FONT}`;\n  }\n\n  /**\n   * Returns a 1-char string to be used as text for mark symbolizers using a font glyph.\n   *\n   * @param symbolizer The MarkSymbolizer to derive the character string from\n   */\n  public static getCharacterForMarkSymbolizer(symbolizer: MarkSymbolizer) {\n    const parts = symbolizer.wellKnownName.match(WELLKNOWNNAME_TTF_REGEXP);\n    if (!parts) {\n      throw new Error(`Could not parse font-based well known name: ${symbolizer.wellKnownName}`);\n    }\n    return String.fromCharCode(parseInt(parts[2], 16));\n  }\n\n  /**\n   * Returns the font name used in the OpenLayers text style `font` property.\n   *\n   * @param olFont the `font` property of an OpenLayers text style\n   */\n  public static getFontNameFromOlFont(olFont: string) {\n    const parts = olFont.match(/(?:\\d+\\S+) '?\"?([^,'\"]+)/);\n    if (!parts) {\n      throw new Error(`Could not find font family name in the following string: ${olFont}`);\n    }\n    return parts[1];\n  }\n\n  /**\n   * Returns the size in pixels specified in the OpenLayers text style `font` property,\n   * or 0 if not found.\n   *\n   * @param olFont the `font` property of an OpenLayers text style\n   */\n  public static getSizeFromOlFont(olFont: string) {\n    const parts = olFont.match(/(?:(\\d+)px)/);\n    return parts ? parseInt(parts[1], 10) : 0;\n  }\n\n  /**\n   * Resolves the given template string with the given feature attributes, e.g.\n   * the template \"Size of area is {{AREA_SIZE}} km²\" would be to resolved\n   * to \"Size of area is 1909 km²\" (assuming the feature's attribute AREA_SIZE\n   * really exists).\n   *\n   * @param feature The feature to get the attributes from.\n   * @param template The template string to resolve.\n   * @param [noValueFoundText] The text to apply, if the templated value\n   *   could not be found, default is to 'n.v.'.\n   * @param [valueAdjust] A method that will be called with each\n   *   key/value match, we'll use what this function returns for the actual\n   *   replacement. Optional, defaults to a function which will return the raw\n   *   value it received. This can be used for last minute adjustments before\n   *   replacing happens, e.g. to filter out falsy values or to do number\n   *   formatting and such.\n   * @return The resolved template string.\n   */\n  static resolveAttributeTemplate(\n    feature: OlFeature,\n    template: string,\n    noValueFoundText: string = 'n.v.',\n    valueAdjust: Function = (key: string, val: any) => val\n  ) {\n\n    let attributeTemplatePrefix = '\\\\{\\\\{';\n    let attributeTemplateSuffix = '\\\\}\\\\}';\n\n    // Find any character between two braces (including the braces in the result)\n    let regExp = new RegExp(attributeTemplatePrefix + '(.*?)' + attributeTemplateSuffix, 'g');\n    let regExpRes = template.match(regExp);\n\n    // If we have a regex result, it means we found a placeholder in the\n    // template and have to replace the placeholder with its appropriate value.\n    if (regExpRes) {\n      // Iterate over all regex match results and find the proper attribute\n      // for the given placeholder, finally set the desired value to the hover.\n      // field text\n      regExpRes.forEach(res => {\n        // We count every non matching candidate. If this count is equal to\n        // the objects length, we assume that there is no match at all and\n        // set the output value to the value of \"noValueFoundText\".\n        let noMatchCnt = 0;\n\n        for (let [key, value] of Object.entries(feature.getProperties())) {\n          // Remove the suffixes and find the matching attribute column.\n          let attributeName = res.slice(2, res.length - 2);\n\n          if (attributeName.toLowerCase() === key.toLowerCase()) {\n            template = template.replace(res, valueAdjust(key, value));\n            break;\n          } else {\n            noMatchCnt++;\n          }\n        }\n\n        // No key match found for this feature (e.g. if key not\n        // present or value is null).\n        if (noMatchCnt === Object.keys(feature.getProperties()).length) {\n          template = template.replace(res, noValueFoundText);\n        }\n      });\n    }\n\n    return template;\n  }\n\n  public static evaluateFunction(func: GeoStylerFunction, feature?: OlFeature): PropertyType {\n    if (func.name === 'property') {\n      if (!feature) {\n        throw new Error(`Could not evalute 'property' function. Feature ${feature} is not defined.`);\n      }\n      if (isGeoStylerStringFunction(func.args[0])) {\n        return feature?.get(OlStyleUtil.evaluateStringFunction(func.args[0], feature));\n      } else {\n        return feature?.get(func.args[0]);\n      }\n    }\n\n    if (isGeoStylerUnknownFunction(func)) {\n      return OlStyleUtil.evaluateUnknownFunction(func, feature);\n    }\n    if (isGeoStylerStringFunction(func)) {\n      return OlStyleUtil.evaluateStringFunction(func, feature);\n    }\n    if (isGeoStylerNumberFunction(func)) {\n      return OlStyleUtil.evaluateNumberFunction(func, feature);\n    }\n    if (isGeoStylerBooleanFunction(func)) {\n      return OlStyleUtil.evaluateBooleanFunction(func, feature);\n    }\n    return;\n  }\n\n  public static evaluateBooleanFunction(func: GeoStylerBooleanFunction, feature?: OlFeature): boolean {\n    const args = func.args.map(arg => {\n      if (isGeoStylerFunction(arg)) {\n        return OlStyleUtil.evaluateFunction(arg, feature);\n      }\n      return arg;\n    });\n    switch (func.name) {\n      case 'all':\n        return args.map(arg => this.evaluateBooleanFunction(arg as GeoStylerBooleanFunction, feature))\n          .every(result => result === true);\n      case 'any':\n        return args.map(arg => this.evaluateBooleanFunction(arg as GeoStylerBooleanFunction, feature))\n          .some(result => result === true);\n      case 'between':\n        return (args[0] as number) >= (args[1] as number) && (args[0] as number) <= (args[2] as number);\n      case 'double2bool':\n        // TODO: evaluate this correctly\n        return false;\n      case 'equalTo':\n        return args[0] === args[1];\n      case 'greaterThan':\n        return (args[0] as number) > (args[1] as number);\n      case 'greaterThanOrEqualTo':\n        return (args[0] as number) >= (args[1] as number);\n      case 'in':\n        return args.slice(1).includes(args[0]);\n      case 'lessThan':\n        return (args[0] as number) < (args[1] as number);\n      case 'lessThanOrEqualTo':\n        return (args[0] as number) <= (args[1] as number);\n      case 'not':\n        return !args[0];\n      case 'notEqualTo':\n        return args[0] !== args[1];\n      case 'parseBoolean':\n        return !!args[0];\n      case 'strEndsWith':\n        return (args[0] as string).endsWith(args[1] as string);\n      case 'strEqualsIgnoreCase':\n        return (args[0] as string).toLowerCase() === (args[1] as string).toLowerCase() ;\n      case 'strMatches':\n        const regEx = (args[1] as string);\n        const regexArray = regEx.match(/\\/(.*?)\\/([gimy]{0,4})$/);\n        if (regexArray && regexArray.length === 3){\n          return new RegExp(regexArray[1], regexArray[2]).test(args[0] as string);\n        } else {\n          return false;\n        }\n      case 'strStartsWith':\n        return (args[0] as string).startsWith(args[1] as string);\n      default:\n        return false;\n    }\n  }\n\n  public static evaluateNumberFunction(func: GeoStylerNumberFunction, feature?: OlFeature): number {\n    if (func.name === 'pi') {\n      return Math.PI;\n    }\n    if (func.name === 'random') {\n      return Math.random();\n    }\n    const args = func.args.map(arg => {\n      if (isGeoStylerFunction(arg)) {\n        return OlStyleUtil.evaluateFunction(arg, feature);\n      }\n      return arg;\n    });\n    switch (func.name) {\n      case 'abs':\n        return Math.abs(args[0] as number);\n      case 'acos':\n        return Math.acos(args[0] as number);\n      case 'add':\n        return (args[0] as number) + (args[1] as number);\n      case 'asin':\n        return Math.asin(args[0] as number);\n      case 'atan':\n        return Math.atan(args[0] as number);\n      case 'atan2':\n        // TODO: evaluate this correctly\n        return args[0] as number;\n      case 'ceil':\n        return Math.ceil(args[0] as number);\n      case 'cos':\n        return Math.cos(args[0] as number);\n      case 'div':\n        return (args[0] as number) / (args[1] as number);\n      case 'exp':\n        return Math.exp(args[0] as number);\n      case 'floor':\n        return Math.floor(args[0] as number);\n      case 'log':\n        return Math.log(args[0] as number);\n      case 'max':\n        return Math.max(...(args as number[]));\n      case 'min':\n        return Math.min(...(args as number[]));\n      case 'modulo':\n        return (args[0] as number) % (args[1] as number);\n      case 'mul':\n        return (args[0] as number) * (args[1] as number);\n      case 'pow':\n        return Math.pow(args[0] as number, args[1] as number);\n      case 'rint':\n        // TODO: evaluate this correctly\n        return args[0] as number;\n      case 'round':\n        return Math.round(args[0] as number);\n      case 'sin':\n        return Math.sin(args[0] as number);\n      case 'sqrt':\n        return Math.sqrt(args[0] as number);\n      case 'strIndexOf':\n        return (args[0] as string).indexOf(args[1] as string);\n      case 'strLastIndexOf':\n        return (args[0] as string).lastIndexOf(args[1] as string);\n      case 'strLength':\n        return (args[0] as string).length;\n      case 'sub':\n        return (args[0] as number) - (args[1] as number);\n      case 'tan':\n        return Math.tan(args[0] as number);\n      case 'toDegrees':\n        return (args[0] as number) * (180/Math.PI);\n      case 'toRadians':\n        return (args[0] as number) * (Math.PI/180);\n      default:\n        return args[0] as number;\n    }\n  }\n\n  public static evaluateUnknownFunction(func: GeoStylerUnknownFunction, feature?: OlFeature): unknown {\n    const args = func.args.map(arg => {\n      if (isGeoStylerFunction(arg)) {\n        return OlStyleUtil.evaluateFunction(arg, feature);\n      }\n      return arg;\n    });\n    switch (func.name) {\n      case 'property':\n        return feature?.get(args[0] as string);\n      case 'case':\n        type FCaseParameter = {\n          case: Expression<boolean>;\n          value: Expression<PropertyType>;\n        };\n        const caseArgs: Fcase['args'] = args as Fcase['args'];\n        let match;\n        for (let index = 0; index < caseArgs.length; index++) {\n          const caseArg = caseArgs[index] as FCaseParameter;\n          // last arg of the case-function-expression is the default value\n          if (index === caseArgs.length - 1) {\n            match = caseArg;\n            break;\n          // the case can be a boolean\n          } else if (caseArg.case === true) {\n            match = caseArg.value;\n            break;\n          // … or a boolean function that has to be evaluated first\n          } else if (OlStyleUtil.evaluateBooleanFunction(caseArg.case as GeoStylerBooleanFunction, feature)) {\n            match = caseArg.value;\n            break;\n          }\n        }\n        return match;\n      default:\n        return args[0];\n    }\n  }\n\n  public static evaluateStringFunction(func: GeoStylerStringFunction, feature?: OlFeature): string {\n    const args = func.args.map(arg => {\n      if (isGeoStylerFunction(arg)) {\n        return OlStyleUtil.evaluateFunction(arg, feature);\n      }\n      return arg;\n    });\n    switch (func.name) {\n      case 'numberFormat':\n        // TODO: evaluate this correctly\n        return args[0] as string;\n      case 'strAbbreviate':\n        // TODO: evaluate this correctly\n        return args[0] as string;\n      case 'strCapitalize':\n        // https://stackoverflow.com/a/32589289/10342669\n        var splitStr = (args[0] as string).toLowerCase().split(' ');\n        for (let part of splitStr) {\n          part = part.charAt(0).toUpperCase() + part.substring(1);\n        }\n        return splitStr.join(' ');\n      case 'strConcat':\n        return args.join();\n      case 'strDefaultIfBlank':\n        return (args[0] as string)?.length < 1 ? args[1] as string : args[0] as string;\n      case 'strReplace':\n        if (args[3] === true) {\n          return (args[0] as string).replaceAll(args[1] as string, args[2] as string);\n        } else {\n          return (args[0] as string).replace(args[1] as string, args[2] as string);\n        }\n      case 'strStripAccents':\n        // https://stackoverflow.com/a/37511463/10342669\n        return (args[0] as string).normalize('NFKD').replace(/[\\u0300-\\u036f]/g, '');\n      case 'strSubstring':\n        return (args[0] as string).substring(args[1] as number, args[2] as number);\n      case 'strSubstringStart':\n        return (args[0] as string).substring(args[1] as number);\n      case 'strToLowerCase':\n        return (args[0] as string).toLowerCase();\n      case 'strToUpperCase':\n        return (args[0] as string).toUpperCase();\n      case 'strTrim':\n        return (args[0] as string).trim();\n      default:\n        return args[0] as string;\n    }\n  }\n\n  public static containsGeoStylerFunctions(style: Style) {\n    return style.rules.some(rule => {\n      const filterHasFunction = Array.isArray(rule.filter) && rule.filter?.some(isGeoStylerFunction);\n      const styleHasFunction = rule.symbolizers?.some(symbolizer => {\n        return Object.values(symbolizer).some(isGeoStylerFunction);\n      });\n      const scaleDenominatorHasFunction = isGeoStylerFunction(rule?.scaleDenominator?.max)\n      || isGeoStylerFunction(rule?.scaleDenominator?.min);\n      return filterHasFunction || styleHasFunction || scaleDenominatorHasFunction;\n    });\n  }\n}\n\nexport default OlStyleUtil;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","import { parseFont } from 'css-font-parser';\n\nimport {\n  CapType,\n  FillSymbolizer,\n  Filter,\n  IconSymbolizer,\n  isGeoStylerBooleanFunction,\n  isGeoStylerFunction,\n  isGeoStylerStringFunction,\n  isIconSymbolizer,\n  isMarkSymbolizer,\n  JoinType,\n  LineSymbolizer,\n  MarkSymbolizer,\n  Operator,\n  PointSymbolizer,\n  ReadStyleResult,\n  Rule,\n  Style,\n  StyleParser,\n  StyleType,\n  Symbolizer,\n  TextSymbolizer,\n  UnsupportedProperties,\n  WriteStyleResult\n} from 'geostyler-style';\n\nimport OlImageState from 'ol/ImageState';\n\nimport OlGeomPoint from 'ol/geom/Point';\n\nimport OlStyle, { StyleFunction as OlStyleFunction, StyleLike as OlStyleLike} from 'ol/style/Style';\nimport OlStyleImage from 'ol/style/Image';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyleText, { Options as OlStyleTextOptions }  from 'ol/style/Text';\nimport OlStyleCircle, { Options as OlStyleCircleOptions } from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleIcon, { Options as OlStyleIconOptions }  from 'ol/style/Icon';\nimport OlStyleRegularshape from 'ol/style/RegularShape';\nimport { METERS_PER_UNIT } from 'ol/proj/Units';\n\nimport OlStyleUtil from './Util/OlStyleUtil';\nimport { toContext } from 'ol/render';\nimport { Feature as OlFeature } from 'ol';\n\nexport interface OlParserStyleFct {\n  (feature?: any, resolution?: number): any;\n  __geoStylerStyle: Style;\n}\n\ntype SymbolizerKeyType = keyof UnsupportedProperties['Symbolizer'];\n\n/**\n * This parser can be used with the GeoStyler.\n * It implements the GeoStyler-Style Parser interface to work with OpenLayers styles.\n *\n * @class OlStyleParser\n * @implements StyleParser\n */\nexport class OlStyleParser implements StyleParser<OlStyleLike> {\n\n  /**\n   * The name of the OlStyleParser.\n   */\n  public static title = 'OpenLayers Style Parser';\n\n  unsupportedProperties: UnsupportedProperties = {\n    Symbolizer: {\n      MarkSymbolizer: {\n        avoidEdges: 'none',\n        blur: 'none',\n        offsetAnchor: 'none',\n        pitchAlignment: 'none',\n        pitchScale: 'none'\n      },\n      FillSymbolizer: {\n        antialias: 'none',\n        opacity: {\n          support: 'none',\n          info: 'Use fillOpacity instead.'\n        }\n      },\n      IconSymbolizer: {\n        allowOverlap: 'none',\n        anchor: 'none',\n        avoidEdges: 'none',\n        color: 'none',\n        haloBlur: 'none',\n        haloColor: 'none',\n        haloWidth: 'none',\n        keepUpright: 'none',\n        offsetAnchor: 'none',\n        size: {\n          support: 'partial',\n          info: 'Will set/get the width of the ol Icon.'\n        },\n        optional: 'none',\n        padding: 'none',\n        pitchAlignment: 'none',\n        rotationAlignment: 'none',\n        textFit: 'none',\n        textFitPadding: 'none'\n      },\n      LineSymbolizer: {\n        blur: 'none',\n        gapWidth: 'none',\n        gradient: 'none',\n        miterLimit: 'none',\n        roundLimit: 'none',\n        spacing: 'none',\n        graphicFill: 'none',\n        graphicStroke: 'none',\n        perpendicularOffset: 'none'\n      },\n      RasterSymbolizer: 'none'\n    },\n    Function: {\n      double2bool: {\n        support: 'none',\n        info: 'Always returns false'\n      },\n      atan2: {\n        support: 'none',\n        info: 'Currently returns the first argument'\n      },\n      rint: {\n        support: 'none',\n        info: 'Currently returns the first argument'\n      },\n      numberFormat: {\n        support: 'none',\n        info: 'Currently returns the first argument'\n      },\n      strAbbreviate: {\n        support: 'none',\n        info: 'Currently returns the first argument'\n      }\n    }\n  };\n\n  title = 'OpenLayers Style Parser';\n  olIconStyleCache: any = {};\n\n  OlStyleConstructor = OlStyle;\n  OlStyleImageConstructor = OlStyleImage;\n  OlStyleFillConstructor = OlStyleFill;\n  OlStyleStrokeConstructor = OlStyleStroke;\n  OlStyleTextConstructor = OlStyleText;\n  OlStyleCircleConstructor = OlStyleCircle;\n  OlStyleIconConstructor = OlStyleIcon;\n  OlStyleRegularshapeConstructor = OlStyleRegularshape;\n\n  constructor(ol?: any) {\n    if (ol) {\n      this.OlStyleConstructor = ol.style.Style;\n      this.OlStyleImageConstructor = ol.style.Image;\n      this.OlStyleFillConstructor = ol.style.Fill;\n      this.OlStyleStrokeConstructor = ol.style.Stroke;\n      this.OlStyleTextConstructor = ol.style.Text;\n      this.OlStyleCircleConstructor = ol.style.Circle;\n      this.OlStyleIconConstructor = ol.style.Icon;\n      this.OlStyleRegularshapeConstructor = ol.style.RegularShape;\n    }\n  }\n\n  isOlParserStyleFct = (x: any): x is OlParserStyleFct => {\n    return typeof x === 'function';\n  };\n\n  /**\n   * Get the GeoStyler-Style PointSymbolizer from an OpenLayers Style object.\n   *\n   * @param olStyle The OpenLayers Style object\n   * @return The GeoStyler-Style PointSymbolizer\n   */\n  getPointSymbolizerFromOlStyle(olStyle: OlStyle): PointSymbolizer {\n    let pointSymbolizer: PointSymbolizer;\n    if (olStyle.getImage() instanceof this.OlStyleCircleConstructor) {\n      // circle\n      const olCircleStyle: OlStyleCircle = olStyle.getImage() as OlStyleCircle;\n      const olFillStyle = olCircleStyle.getFill();\n      const olStrokeStyle = olCircleStyle.getStroke();\n      const offset = olCircleStyle.getDisplacement() as [number, number];\n\n      const circleSymbolizer: MarkSymbolizer = {\n        kind: 'Mark',\n        wellKnownName: 'circle',\n        color: olFillStyle ? OlStyleUtil.getHexColor(olFillStyle.getColor() as string) : undefined,\n        opacity: olCircleStyle.getOpacity() !== 1 ? olCircleStyle.getOpacity() : undefined,\n        fillOpacity: olFillStyle ? OlStyleUtil.getOpacity(olFillStyle.getColor() as string) : undefined,\n        radius: (olCircleStyle.getRadius() !== 0) ? olCircleStyle.getRadius() : 5,\n        strokeColor: olStrokeStyle ? olStrokeStyle.getColor() as string : undefined,\n        strokeOpacity: olStrokeStyle ? OlStyleUtil.getOpacity(olStrokeStyle.getColor() as string) : undefined,\n        strokeWidth: olStrokeStyle ? olStrokeStyle.getWidth() : undefined,\n        offset: offset[0] || offset[1] ? offset : undefined\n      };\n      pointSymbolizer = circleSymbolizer;\n    } else if (olStyle.getImage() instanceof this.OlStyleRegularshapeConstructor) {\n      // square, triangle, star, cross or x\n      const olRegularStyle: OlStyleRegularshape = olStyle.getImage() as OlStyleRegularshape;\n      const olFillStyle = olRegularStyle.getFill();\n      const olStrokeStyle = olRegularStyle.getStroke();\n      const radius = olRegularStyle.getRadius();\n      const radius2 = olRegularStyle.getRadius2();\n      const points = olRegularStyle.getPoints();\n      const angle = olRegularStyle.getAngle();\n      const offset = olRegularStyle.getDisplacement() as [number, number];\n\n      const markSymbolizer: MarkSymbolizer = {\n        kind: 'Mark',\n        color: olFillStyle ? OlStyleUtil.getHexColor(olFillStyle.getColor() as string) : undefined,\n        opacity: olRegularStyle.getOpacity() !== 1 ? olRegularStyle.getOpacity() : undefined,\n        fillOpacity: olFillStyle ? OlStyleUtil.getOpacity(olFillStyle.getColor() as string) : undefined,\n        strokeColor: olStrokeStyle ? olStrokeStyle.getColor() as string : undefined,\n        strokeOpacity: olStrokeStyle ? OlStyleUtil.getOpacity(olStrokeStyle.getColor() as string) : undefined,\n        strokeWidth: olStrokeStyle ? olStrokeStyle.getWidth() : undefined,\n        radius: (radius !== 0) ? radius : 5,\n        // Rotation in openlayers is radians while we use degree\n        rotate: olRegularStyle.getRotation() / Math.PI * 180,\n        offset: offset[0] || offset[1] ? offset : undefined\n      } as MarkSymbolizer;\n\n      switch (points) {\n        case 2:\n          switch (angle) {\n            case 0:\n              markSymbolizer.wellKnownName = 'shape://vertline';\n              break;\n            case Math.PI / 2:\n              markSymbolizer.wellKnownName = 'shape://horline';\n              break;\n            case Math.PI / 4:\n              markSymbolizer.wellKnownName = 'shape://slash';\n              break;\n            case 2 * Math.PI - (Math.PI / 4):\n              markSymbolizer.wellKnownName = 'shape://backslash';\n              break;\n            default:\n              break;\n          }\n          break;\n        case 3:\n          switch (angle) {\n            case 0:\n              markSymbolizer.wellKnownName = 'triangle';\n              break;\n            case Math.PI / 2:\n              markSymbolizer.wellKnownName = 'shape://carrow';\n              break;\n            default:\n              break;\n          }\n          break;\n        case 4:\n          if (Number.isFinite(radius2)) {\n            // cross or x\n            if (olRegularStyle.getAngle() === 0) {\n              // cross\n              markSymbolizer.wellKnownName = 'cross';\n            } else {\n              // x\n              markSymbolizer.wellKnownName = 'x';\n            }\n          } else {\n            // square\n            markSymbolizer.wellKnownName = 'square';\n          }\n          break;\n        case 5:\n          // star\n          markSymbolizer.wellKnownName = 'star';\n          break;\n        default:\n          throw new Error('Could not parse OlStyle. Only 2, 3, 4 or 5 point regular shapes are allowed');\n      }\n      pointSymbolizer = markSymbolizer;\n    } else if (olStyle.getText() instanceof this.OlStyleTextConstructor) {\n      const olTextStyle: OlStyleText = olStyle.getText() as OlStyleText;\n      const olFillStyle = olTextStyle.getFill();\n      const olStrokeStyle = olTextStyle.getStroke();\n      const rotation = olTextStyle.getRotation();\n      let char = olTextStyle.getText() || 'a';\n      const font = olTextStyle.getFont() || '10px sans-serif';\n      const fontName = OlStyleUtil.getFontNameFromOlFont(font);\n      const radius = OlStyleUtil.getSizeFromOlFont(font);\n      const offset = [olTextStyle.getOffsetX(), olTextStyle.getOffsetY()];\n\n      if (Array.isArray(char)) {\n        char = char[0];\n      }\n\n      pointSymbolizer = {\n        kind: 'Mark',\n        wellKnownName: `ttf://${fontName}#0x${char.charCodeAt(0).toString(16)}`,\n        color: olFillStyle ? OlStyleUtil.getHexColor(olFillStyle.getColor() as string) : undefined,\n        opacity: olFillStyle ? OlStyleUtil.getOpacity(olFillStyle.getColor() as string) : undefined,\n        strokeColor: olStrokeStyle ? olStrokeStyle.getColor() as string : undefined,\n        strokeOpacity: olStrokeStyle ? OlStyleUtil.getOpacity(olStrokeStyle.getColor() as string) : undefined,\n        strokeWidth: olStrokeStyle ? olStrokeStyle.getWidth() : undefined,\n        radius: (radius !== 0) ? radius : 5,\n        // Rotation in openlayers is radians while we use degree\n        rotate: rotation ? rotation / Math.PI * 180 : 0,\n        offset: offset[0] || offset[1] ? offset : undefined\n      } as MarkSymbolizer;\n    } else {\n      // icon\n      const olIconStyle: any = olStyle.getImage();\n      const offset = olIconStyle.getDisplacement() as [number, number];\n      // initialOptions_ as fallback when image is not yet loaded\n      const size = olIconStyle.getWidth() ?? olIconStyle.initialOptions_.width;\n\n      const iconSymbolizer: IconSymbolizer = {\n        kind: 'Icon',\n        image: olIconStyle.getSrc() ? olIconStyle.getSrc() : undefined,\n        opacity: olIconStyle.getOpacity(),\n        size,\n        // Rotation in openlayers is radians while we use degree\n        rotate: olIconStyle.getRotation() / Math.PI * 180,\n        offset: offset[0] || offset[1] ? offset : undefined\n      };\n      pointSymbolizer = iconSymbolizer;\n    }\n    return pointSymbolizer;\n  }\n\n  /**\n   * Get the GeoStyler-Style LineSymbolizer from an OpenLayers Style object.\n   *\n   * @param olStyle The OpenLayers Style object\n   * @return The GeoStyler-Style LineSymbolizer\n   */\n  getLineSymbolizerFromOlStyle(olStyle: OlStyle): LineSymbolizer {\n    const olStrokeStyle = olStyle.getStroke();\n    // getLineDash returns null not undefined. So we have to double check\n    const dashArray = olStrokeStyle ? olStrokeStyle.getLineDash() : undefined;\n\n    return {\n      kind: 'Line',\n      color: olStrokeStyle ? OlStyleUtil.getHexColor(olStrokeStyle.getColor() as string) as string : undefined,\n      opacity: olStrokeStyle ? OlStyleUtil.getOpacity(olStrokeStyle.getColor() as string) : undefined,\n      width: olStrokeStyle ? olStrokeStyle.getWidth() : undefined,\n      cap: olStrokeStyle ? <LineSymbolizer['cap']> olStrokeStyle.getLineCap() : 'butt',\n      join: olStrokeStyle ? <LineSymbolizer['join']> olStrokeStyle.getLineJoin() : 'miter',\n      dasharray: dashArray ? dashArray : undefined,\n      dashOffset: olStrokeStyle ? olStrokeStyle.getLineDashOffset() : undefined\n    };\n  }\n\n  /**\n   * Get the GeoStyler-Style FillSymbolizer from an OpenLayers Style object.\n   *\n   * PolygonSymbolizer Stroke is just partially supported.\n   *\n   * @param olStyle The OpenLayers Style object\n   * @return The GeoStyler-Style FillSymbolizer\n   */\n  getFillSymbolizerFromOlStyle(olStyle: OlStyle): FillSymbolizer {\n    const olFillStyle = olStyle.getFill();\n    const olStrokeStyle = olStyle.getStroke();\n    // getLineDash returns null not undefined. So we have to double check\n    const outlineDashArray = olStrokeStyle ? olStrokeStyle.getLineDash() : undefined;\n\n    const symbolizer: FillSymbolizer = {\n      kind: 'Fill'\n    };\n\n    if (olFillStyle) {\n      symbolizer.color = OlStyleUtil.getHexColor(olFillStyle.getColor() as string);\n    }\n    if (olFillStyle) {\n      symbolizer.fillOpacity = OlStyleUtil.getOpacity(olFillStyle.getColor() as string);\n    }\n    if (olStrokeStyle) {\n      symbolizer.outlineColor = OlStyleUtil.getHexColor(olStrokeStyle.getColor() as string);\n    }\n    if (outlineDashArray) {\n      symbolizer.outlineDasharray = outlineDashArray;\n    }\n    if (olStrokeStyle) {\n      symbolizer.outlineOpacity = OlStyleUtil.getOpacity(olStrokeStyle.getColor() as string);\n    }\n    if (olStrokeStyle && olStrokeStyle.getWidth()) {\n      symbolizer.outlineWidth = olStrokeStyle.getWidth();\n    }\n    return symbolizer;\n\n  }\n\n  /**\n   * Get the GeoStyler-Style TextSymbolizer from an OpenLayers Style object.\n   *\n   *\n   * @param olStyle The OpenLayers Style object\n   * @return The GeoStyler-Style TextSymbolizer\n   */\n  getTextSymbolizerFromOlStyle(olStyle: OlStyle): TextSymbolizer {\n    const olTextStyle = olStyle.getText();\n    const olFillStyle = olTextStyle.getFill();\n    const olStrokeStyle = olTextStyle.getStroke();\n    const offsetX = olTextStyle.getOffsetX();\n    const offsetY = olTextStyle.getOffsetY();\n    const font = olTextStyle.getFont();\n    const rotation = olTextStyle.getRotation();\n    const allowOverlap = olTextStyle.getOverflow() ? olTextStyle.getOverflow() : undefined;\n    const text = olTextStyle.getText();\n    const label = Array.isArray(text) ? text[0] : text;\n    let fontSize: number = Infinity;\n    let fontFamily: string[]|undefined = undefined;\n    let fontWeight: 'normal' | 'bold' | undefined = undefined;\n    let fontStyle: 'normal' | 'italic' | 'oblique' | undefined = undefined;\n\n    if (font) {\n      const fontObj = parseFont(font);\n      if (fontObj['font-weight']) {\n        fontWeight = fontObj['font-weight'];\n      }\n      if (fontObj['font-size']) {\n        fontSize = parseInt(fontObj['font-size'], 10);\n      }\n      if (fontObj['font-family']) {\n        const fontFamilies = fontObj['font-family'];\n        fontFamily = fontFamilies?.map((f: string) => f.includes(' ') ? '\"' + f + '\"' : f);\n      }\n      if (fontObj['font-style']) {\n        fontStyle = fontObj['font-style'];\n      }\n    }\n\n    return {\n      kind: 'Text',\n      label,\n      allowOverlap,\n      color: olFillStyle ? OlStyleUtil.getHexColor(olFillStyle.getColor() as string) : undefined,\n      size: isFinite(fontSize) ? fontSize : undefined,\n      font: fontFamily,\n      fontWeight: fontWeight || undefined,\n      fontStyle: fontStyle || undefined,\n      offset: (offsetX !== undefined) && (offsetY !== undefined) ? [offsetX, offsetY] : [0, 0],\n      haloColor: olStrokeStyle && olStrokeStyle.getColor() ?\n        OlStyleUtil.getHexColor(olStrokeStyle.getColor() as string) : undefined,\n      haloWidth: olStrokeStyle ? olStrokeStyle.getWidth() : undefined,\n      rotate: (rotation !== undefined) ? rotation / Math.PI * 180 : undefined\n    };\n  }\n\n  /**\n   * Get the GeoStyler-Style Symbolizer from an OpenLayers Style object.\n   *\n   * @param olStyles The OpenLayers Style object\n   * @return The GeoStyler-Style Symbolizer array\n   */\n  getSymbolizersFromOlStyle(olStyles: OlStyle[]): Symbolizer[] {\n    const symbolizers: Symbolizer[] = [];\n    olStyles.forEach(olStyle => {\n      let symbolizer: Symbolizer;\n      const styleType: StyleType = this.getStyleTypeFromOlStyle(olStyle);\n      switch (styleType) {\n        case 'Point':\n          if (olStyle.getText() && !OlStyleUtil.getIsMarkSymbolizerFont((olStyle as any).getText().getFont())) {\n            symbolizer = this.getTextSymbolizerFromOlStyle(olStyle);\n          } else {\n            symbolizer = this.getPointSymbolizerFromOlStyle(olStyle);\n          }\n          break;\n        case 'Line':\n          symbolizer = this.getLineSymbolizerFromOlStyle(olStyle);\n          break;\n        case 'Fill':\n          symbolizer = this.getFillSymbolizerFromOlStyle(olStyle);\n          break;\n        default:\n          throw new Error('Failed to parse SymbolizerKind from OpenLayers Style');\n      }\n      symbolizers.push(symbolizer);\n    });\n\n    return symbolizers;\n  }\n\n  /**\n   * Get the GeoStyler-Style Rule from an OpenLayers Style object.\n   *\n   * @param olStyles The OpenLayers Style object\n   * @return The GeoStyler-Style Rule\n   */\n  getRuleFromOlStyle(olStyles: OlStyle | OlStyle[]): Rule {\n    let symbolizers: Symbolizer[];\n    const name = 'OL Style Rule 0';\n\n    if (Array.isArray(olStyles)) {\n      symbolizers = this.getSymbolizersFromOlStyle(olStyles);\n    } else {\n      symbolizers = this.getSymbolizersFromOlStyle([olStyles]);\n    }\n\n    return {\n      name, symbolizers\n    };\n  }\n\n  /**\n   * Get the GeoStyler-Style Symbolizer from an OpenLayers Style object.\n   *\n   * @param olStyle The OpenLayers Style object\n   * @return The GeoStyler-Style Symbolizer\n   */\n  getStyleTypeFromOlStyle(olStyle: OlStyle): StyleType {\n    let styleType: StyleType;\n\n    if (olStyle.getImage() instanceof this.OlStyleImageConstructor) {\n      styleType = 'Point';\n    } else if (olStyle.getText() instanceof this.OlStyleTextConstructor) {\n      styleType = 'Point';\n    } else if (olStyle.getFill() instanceof this.OlStyleFillConstructor) {\n      styleType = 'Fill';\n    } else if (olStyle.getStroke() && !olStyle.getFill()) {\n      styleType = 'Line';\n    } else {\n      throw new Error('StyleType could not be detected');\n    }\n\n    return styleType;\n  }\n\n  /**\n   * Get the GeoStyler-Style Style from an OpenLayers Style object.\n   *\n   * @param olStyle The OpenLayers Style object\n   * @return The GeoStyler-Style Style\n   */\n  olStyleToGeoStylerStyle(olStyle: OlStyle | OlStyle[]): Style {\n    const name = 'OL Style';\n    const rule = this.getRuleFromOlStyle(olStyle);\n    return {\n      name,\n      rules: [rule]\n    };\n  }\n\n  /**\n   * The readStyle implementation of the GeoStyler-Style StyleParser interface.\n   * It reads an OpenLayers Style, an array of OpenLayers Styles or an olParserStyleFct and returns a Promise.\n   *\n   * The Promise itself resolves with a GeoStyler-Style Style.\n   *\n   * @param olStyle The style to be parsed\n   * @return The Promise resolving with the GeoStyler-Style Style\n   */\n  readStyle(olStyle: OlStyleLike): Promise<ReadStyleResult> {\n    return new Promise<ReadStyleResult>((resolve) => {\n      try {\n        if (this.isOlParserStyleFct(olStyle)) {\n          resolve({\n            output: olStyle.__geoStylerStyle\n          });\n        } else {\n          olStyle = olStyle as OlStyle | OlStyle[];\n          const geoStylerStyle: Style = this.olStyleToGeoStylerStyle(olStyle);\n          const unsupportedProperties = this.checkForUnsupportedProperties(geoStylerStyle);\n          resolve({\n            output: geoStylerStyle,\n            unsupportedProperties\n          });\n        }\n      } catch (error) {\n        resolve({\n          errors: [error]\n        });\n      }\n    });\n  }\n\n  /**\n   * The writeStyle implementation of the GeoStyler-Style StyleParser interface.\n   * It reads a GeoStyler-Style Style and returns a Promise.\n   * The Promise itself resolves one of three types\n   *\n   * 1. OlStyle if input Style consists of\n   *    one rule with one symbolizer, no filter, no scaleDenominator, no TextSymbolizer\n   * 2. OlStyle[] if input Style consists of\n   *    one rule with multiple symbolizers, no filter, no scaleDenominator, no TextSymbolizer\n   * 3. OlParserStyleFct for everything else\n   *\n   * @param geoStylerStyle A GeoStyler-Style Style.\n   * @return The Promise resolving with one of above mentioned style types.\n   */\n  writeStyle(geoStylerStyle: Style): Promise<WriteStyleResult<OlStyle | OlStyle[] | OlParserStyleFct>> {\n    return new Promise<WriteStyleResult>((resolve) => {\n      const clonedStyle = structuredClone(geoStylerStyle);\n      const unsupportedProperties = this.checkForUnsupportedProperties(clonedStyle);\n      try {\n        const olStyle = this.getOlStyleTypeFromGeoStylerStyle(clonedStyle);\n        resolve({\n          output: olStyle,\n          unsupportedProperties,\n          warnings: unsupportedProperties && ['Your style contains unsupportedProperties!']\n        });\n      } catch (error) {\n        resolve({\n          errors: [error]\n        });\n      }\n    });\n  }\n\n  checkForUnsupportedProperties(geoStylerStyle: Style): UnsupportedProperties | undefined {\n    const capitalizeFirstLetter = (a: string) => a[0].toUpperCase() + a.slice(1);\n    const unsupportedProperties: UnsupportedProperties = {};\n    geoStylerStyle.rules.forEach(rule => {\n      // ScaleDenominator and Filters are completly supported so we just check for symbolizers\n      rule.symbolizers.forEach(symbolizer => {\n        const key = capitalizeFirstLetter(`${symbolizer.kind}Symbolizer`);\n        const value = this.unsupportedProperties?.Symbolizer?.[key as SymbolizerKeyType];\n        if (value) {\n          if (typeof value === 'string') {\n            if (!unsupportedProperties.Symbolizer) {\n              unsupportedProperties.Symbolizer = {};\n            }\n            unsupportedProperties.Symbolizer[key as SymbolizerKeyType] = value;\n          } else {\n            Object.keys(symbolizer).forEach(property => {\n              if (value[property]) {\n                if (!unsupportedProperties.Symbolizer) {\n                  unsupportedProperties.Symbolizer = {};\n                }\n                if (!unsupportedProperties.Symbolizer[key as SymbolizerKeyType]) {\n                  (unsupportedProperties.Symbolizer as any)[key] = {};\n                }\n                unsupportedProperties.Symbolizer\n                  [key as SymbolizerKeyType][property] = value[property];\n              }\n            });\n          }\n        }\n      });\n    });\n    if (Object.keys(unsupportedProperties).length > 0) {\n      return unsupportedProperties;\n    }\n    return undefined;\n  }\n\n  /**\n   * Decides which OlStyleType should be returned depending on given geoStylerStyle.\n   * Three OlStyleTypes are possible:\n   *\n   * 1. OlStyle if input Style consists of\n   *    one rule with one symbolizer, no filter, no scaleDenominator, no TextSymbolizer\n   * 2. OlStyle[] if input Style consists of\n   *    one rule with multiple symbolizers, no filter, no scaleDenominator, no TextSymbolizer\n   * 3. OlParserStyleFct for everything else\n   *\n   * @param geoStylerStyle A GeoStyler-Style Style\n   */\n  getOlStyleTypeFromGeoStylerStyle(geoStylerStyle: Style): OlStyle | OlStyle[] | OlParserStyleFct {\n    const rules = geoStylerStyle.rules;\n    const nrRules = rules.length;\n    if (nrRules === 1) {\n      const hasFilter = geoStylerStyle?.rules?.[0]?.filter !== undefined ? true : false;\n      const hasMinScale = geoStylerStyle?.rules?.[0]?.scaleDenominator?.min !== undefined ? true : false;\n      const hasMaxScale = geoStylerStyle?.rules?.[0]?.scaleDenominator?.max !== undefined ? true : false;\n      const hasScaleDenominator = hasMinScale || hasMaxScale ? true : false;\n      const hasFunctions = OlStyleUtil.containsGeoStylerFunctions(geoStylerStyle);\n\n      const nrSymbolizers = geoStylerStyle.rules[0].symbolizers.length;\n      const hasTextSymbolizer = rules[0].symbolizers.some((symbolizer: Symbolizer) => {\n        return symbolizer.kind === 'Text';\n      });\n      const hasDynamicIconSymbolizer = rules[0].symbolizers.some((symbolizer: Symbolizer) => {\n        return symbolizer.kind === 'Icon' && typeof(symbolizer.image) === 'string' && symbolizer.image.includes('{{');\n      });\n      if (!hasFilter && !hasScaleDenominator && !hasTextSymbolizer && !hasDynamicIconSymbolizer && !hasFunctions) {\n        if (nrSymbolizers === 1) {\n          return this.geoStylerStyleToOlStyle(geoStylerStyle);\n        } else {\n          return this.geoStylerStyleToOlStyleArray(geoStylerStyle);\n        }\n      } else {\n        return this.geoStylerStyleToOlParserStyleFct(geoStylerStyle);\n      }\n    } else {\n      return this.geoStylerStyleToOlParserStyleFct(geoStylerStyle);\n    }\n  }\n\n  /**\n   * Parses the first symbolizer of the first rule of a GeoStyler-Style Style.\n   *\n   * @param geoStylerStyle GeoStyler-Style Style\n   * @return An OpenLayers Style Object\n   */\n  geoStylerStyleToOlStyle(geoStylerStyle: Style): OlStyle {\n    const rule = geoStylerStyle.rules[0];\n    const symbolizer = rule.symbolizers[0];\n    const olSymbolizer = this.getOlSymbolizerFromSymbolizer(symbolizer);\n    return olSymbolizer;\n  }\n\n  /**\n   * Parses all symbolizers of the first rule of a GeoStyler-Style Style.\n   *\n   * @param geoStylerStyle GeoStyler-Style Style\n   * @return An array of OpenLayers Style Objects\n   */\n  geoStylerStyleToOlStyleArray(geoStylerStyle: Style): OlStyle[] {\n    const rule = geoStylerStyle.rules[0];\n    const olStyles: any[] = [];\n    rule.symbolizers.forEach((symbolizer: Symbolizer) => {\n      const olSymbolizer: any = this.getOlSymbolizerFromSymbolizer(symbolizer);\n      olStyles.push(olSymbolizer);\n    });\n    return olStyles;\n  }\n\n  /**\n   * Get the OpenLayers Style object from an GeoStyler-Style Style\n   *\n   * @param geoStylerStyle A GeoStyler-Style Style.\n   * @return An OlParserStyleFct\n   */\n  geoStylerStyleToOlParserStyleFct(geoStylerStyle: Style): OlParserStyleFct {\n    const rules = structuredClone(geoStylerStyle.rules);\n    const olStyle = (feature: any, resolution: number): any[] => {\n      const styles: any[] = [];\n\n      // calculate scale for resolution (from ol-util MapUtil)\n      const dpi = 25.4 / 0.28;\n      const mpu = METERS_PER_UNIT.m;\n      const inchesPerMeter = 39.37;\n      const scale = resolution * mpu * inchesPerMeter * dpi;\n\n      rules.forEach((rule: Rule) => {\n        // handling scale denominator\n        let minScale = rule?.scaleDenominator?.min;\n        let maxScale = rule?.scaleDenominator?.max;\n        let isWithinScale = true;\n        if (minScale || maxScale) {\n          minScale = isGeoStylerFunction(minScale) ? OlStyleUtil.evaluateNumberFunction(minScale) : minScale;\n          maxScale = isGeoStylerFunction(maxScale) ? OlStyleUtil.evaluateNumberFunction(maxScale) : maxScale;\n          if (minScale && scale < minScale) {\n            isWithinScale = false;\n          }\n          if (maxScale && scale >= maxScale) {\n            isWithinScale = false;\n          }\n        }\n\n        // handling filter\n        let matchesFilter: boolean = false;\n        if (!rule.filter) {\n          matchesFilter = true;\n        } else {\n          try {\n            matchesFilter = this.geoStylerFilterToOlParserFilter(feature, rule.filter);\n          } catch (e) {\n            matchesFilter = false;\n          }\n        }\n\n        if (isWithinScale && matchesFilter) {\n          rule.symbolizers.forEach((symb: Symbolizer) => {\n            if (symb.visibility === false) {\n              styles.push(null);\n            }\n\n            if (isGeoStylerBooleanFunction(symb.visibility)) {\n              const visibility = OlStyleUtil.evaluateBooleanFunction(symb.visibility);\n              if (!visibility) {\n                styles.push(null);\n              }\n            }\n\n            const olSymbolizer: any = this.getOlSymbolizerFromSymbolizer(symb, feature);\n            // either an OlStyle or an ol.StyleFunction. OpenLayers only accepts an array\n            // of OlStyles, not ol.StyleFunctions.\n            // So we have to check it and in case of an ol.StyleFunction call that function\n            // and add the returned style to const styles.\n            if (typeof olSymbolizer !== 'function') {\n              styles.push(olSymbolizer);\n            } else {\n              const styleFromFct: any = olSymbolizer(feature, resolution);\n              styles.push(styleFromFct);\n            }\n          });\n        }\n      });\n      return styles;\n    };\n    const olStyleFct: OlParserStyleFct = olStyle as OlParserStyleFct;\n    olStyleFct.__geoStylerStyle = geoStylerStyle;\n    return olStyleFct;\n  }\n\n  /**\n   * Checks if a feature matches given filter expression(s)\n   * @param feature ol.Feature\n   * @param filter Filter\n   * @return boolean true if feature matches filter expression\n   */\n  geoStylerFilterToOlParserFilter(feature: any, filter: Filter): boolean {\n    const operatorMapping: any = {\n      '&&': true,\n      '||': true,\n      '!': true\n    };\n\n    let matchesFilter: boolean = true;\n    if (isGeoStylerBooleanFunction(filter)) {\n      return OlStyleUtil.evaluateBooleanFunction(filter, feature);\n    }\n    if (filter === true || filter === false) {\n      return filter;\n    }\n    const operator: Operator = filter[0];\n    let isNestedFilter: boolean = false;\n    if (operatorMapping[operator]) {\n      isNestedFilter = true;\n    }\n    try {\n      if (isNestedFilter) {\n        switch (filter[0]) {\n          case '&&':\n            let intermediate = true;\n            let restFilter = filter.slice(1);\n            restFilter.forEach((f: Filter) => {\n              if (!this.geoStylerFilterToOlParserFilter(feature, f)) {\n                intermediate = false;\n              }\n            });\n            matchesFilter = intermediate;\n            break;\n          case '||':\n            intermediate = false;\n            restFilter = filter.slice(1);\n            restFilter.forEach((f: Filter) => {\n              if (this.geoStylerFilterToOlParserFilter(feature, f)) {\n                intermediate = true;\n              }\n            });\n            matchesFilter = intermediate;\n            break;\n          case '!':\n            matchesFilter = !this.geoStylerFilterToOlParserFilter(feature, filter[1]);\n            break;\n          default:\n            throw new Error('Cannot parse Filter. Unknown combination or negation operator.');\n        }\n      } else {\n        let arg1: any;\n        if (isGeoStylerFunction(filter[1])) {\n          arg1 = OlStyleUtil.evaluateFunction(filter[1], feature);\n        } else {\n          arg1 = feature.get(filter[1]);\n        }\n        let arg2: any;\n        if (isGeoStylerFunction(filter[2])) {\n          arg2 = feature.get(OlStyleUtil.evaluateFunction(filter[2], feature));\n        } else {\n          arg2 = filter[2];\n        }\n        switch (filter[0]) {\n          case '==':\n            matchesFilter = ('' + arg1) === ('' + arg2);\n            break;\n          case '*=':\n            // inspired by\n            // https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/String/includes#Polyfill\n            if (typeof arg2 === 'string' && typeof arg1 === 'string') {\n              if (arg2.length > arg1.length) {\n                matchesFilter = false;\n              } else {\n                matchesFilter = arg1.indexOf(arg2) !== -1;\n              }\n            }\n            break;\n          case '!=':\n            matchesFilter = ('' + arg1) !== ('' + arg2);\n            break;\n          case '<':\n            matchesFilter = Number(arg1) < Number(arg2);\n            break;\n          case '<=':\n            matchesFilter = Number(arg1) <= Number(arg2);\n            break;\n          case '>':\n            matchesFilter = Number(arg1) > Number(arg2);\n            break;\n          case '>=':\n            matchesFilter = Number(arg1) >= Number(arg2);\n            break;\n          default:\n            throw new Error('Cannot parse Filter. Unknown comparison operator.');\n        }\n      }\n    } catch (e) {\n      throw new Error('Cannot parse Filter. Invalid structure.');\n    }\n    return matchesFilter;\n  }\n\n  /**\n   * Get the OpenLayers Style object or an OL StyleFunction from an\n   * GeoStyler-Style Symbolizer.\n   *\n   * @param symbolizer A GeoStyler-Style Symbolizer.\n   * @return The OpenLayers Style object or a StyleFunction\n   */\n  getOlSymbolizerFromSymbolizer(symbolizer: Symbolizer, feature?: OlFeature): OlStyle {\n    let olSymbolizer: any;\n    symbolizer = structuredClone(symbolizer);\n\n    switch (symbolizer.kind) {\n      case 'Mark':\n        olSymbolizer = this.getOlPointSymbolizerFromMarkSymbolizer(symbolizer, feature);\n        break;\n      case 'Icon':\n        olSymbolizer = this.getOlIconSymbolizerFromIconSymbolizer(symbolizer, feature);\n        break;\n      case 'Text':\n        olSymbolizer = this.getOlTextSymbolizerFromTextSymbolizer(symbolizer, feature);\n        break;\n      case 'Line':\n        olSymbolizer = this.getOlLineSymbolizerFromLineSymbolizer(symbolizer, feature);\n        break;\n      case 'Fill':\n        olSymbolizer = this.getOlPolygonSymbolizerFromFillSymbolizer(symbolizer, feature);\n        break;\n      default:\n        // Return the OL default style since the TS type binding does not allow\n        // us to set olSymbolizer to undefined\n        const fill = new this.OlStyleFillConstructor({\n          color: 'rgba(255,255,255,0.4)'\n        });\n        const stroke = new this.OlStyleStrokeConstructor({\n          color: '#3399CC',\n          width: 1.25\n        });\n        olSymbolizer = new this.OlStyleConstructor({\n          image: new this.OlStyleCircleConstructor({\n            fill: fill,\n            stroke: stroke,\n            radius: 5\n          }),\n          fill: fill,\n          stroke: stroke\n        });\n        break;\n    }\n\n    return olSymbolizer;\n  }\n\n  /**\n   * Get the OL Style object  from an GeoStyler-Style MarkSymbolizer.\n   *\n   * @param markSymbolizer A GeoStyler-Style MarkSymbolizer.\n   * @return The OL Style object\n   */\n  getOlPointSymbolizerFromMarkSymbolizer(markSymbolizer: MarkSymbolizer, feature?: OlFeature): OlStyleRegularshape {\n    let stroke: any;\n\n    for (const key of Object.keys(markSymbolizer)) {\n      if (isGeoStylerFunction(markSymbolizer[key as keyof MarkSymbolizer])) {\n        (markSymbolizer as any)[key] = OlStyleUtil.evaluateFunction((markSymbolizer as any)[key], feature);\n      }\n    }\n\n    const strokeColor = markSymbolizer.strokeColor as string;\n    const strokeOpacity = markSymbolizer.strokeOpacity as number;\n\n    const sColor = strokeColor && (strokeOpacity !== undefined)\n      ? OlStyleUtil.getRgbaColor(strokeColor, strokeOpacity)\n      : markSymbolizer.strokeColor as string;\n\n    if (markSymbolizer.strokeColor || markSymbolizer.strokeWidth !== undefined) {\n      stroke = new this.OlStyleStrokeConstructor({\n        color: sColor,\n        width: markSymbolizer.strokeWidth as number\n      });\n    }\n\n    const color = markSymbolizer.color as string;\n    const opacity = markSymbolizer.opacity as number;\n    const radius = markSymbolizer.radius as number;\n    const fillOpacity = markSymbolizer.fillOpacity as number;\n    const fColor = color && (fillOpacity !== undefined)\n      ? OlStyleUtil.getRgbaColor(color, fillOpacity ?? 1)\n      : color;\n\n    const fill = new this.OlStyleFillConstructor({\n      color: fColor\n    });\n\n    let olStyle: any;\n    const shapeOpts = {\n      fill: fill,\n      radius: radius ?? 5,\n      rotation: typeof(markSymbolizer.rotate) === 'number' ? markSymbolizer.rotate * Math.PI / 180 : undefined,\n      stroke: stroke,\n      displacement: typeof(markSymbolizer.offset) === 'number' ? markSymbolizer.offset : undefined\n    };\n\n    switch (markSymbolizer.wellKnownName) {\n      case 'shape://dot':\n      case 'circle':\n        olStyle = new this.OlStyleConstructor({\n          image: new this.OlStyleCircleConstructor(shapeOpts as OlStyleCircleOptions)\n        });\n        break;\n      case 'square':\n        olStyle = new this.OlStyleConstructor({\n          image: new this.OlStyleRegularshapeConstructor({\n            ...shapeOpts,\n            points: 4,\n            angle: 45 * Math.PI / 180\n          })\n        });\n        break;\n      case 'triangle':\n        olStyle = new this.OlStyleConstructor({\n          image: new this.OlStyleRegularshapeConstructor({\n            ...shapeOpts,\n            points: 3,\n            angle: 0\n          })\n        });\n        break;\n      case 'star':\n        olStyle = new this.OlStyleConstructor({\n          image: new this.OlStyleRegularshapeConstructor({\n            ...shapeOpts,\n            points: 5,\n            radius2: shapeOpts.radius! / 2.5,\n            angle: 0\n          })\n        });\n        break;\n      case 'shape://plus':\n      case 'cross':\n        // openlayers does not seem to set a default stroke color,\n        // which is needed for regularshapes with radius2 = 0\n        if (shapeOpts.stroke === undefined) {\n          shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n            color: '#000'\n          });\n        }\n        olStyle = new this.OlStyleConstructor({\n          image: new this.OlStyleRegularshapeConstructor({\n            ...shapeOpts,\n            points: 4,\n            radius2: 0,\n            angle: 0\n          })\n        });\n        break;\n      case 'shape://times':\n      case 'x':\n        // openlayers does not seem to set a default stroke color,\n        // which is needed for regularshapes with radius2 = 0\n        if (shapeOpts.stroke === undefined) {\n          shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n            color: '#000'\n          });\n        }\n        olStyle = new this.OlStyleConstructor({\n          image: new this.OlStyleRegularshapeConstructor({\n            ...shapeOpts,\n            points: 4,\n            radius2: 0,\n            angle: 45 * Math.PI / 180\n          })\n        });\n        break;\n      case 'shape://backslash':\n        // openlayers does not seem to set a default stroke color,\n        // which is needed for regularshapes with radius2 = 0\n        if (shapeOpts.stroke === undefined) {\n          shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n            color: '#000'\n          });\n        }\n        olStyle = new this.OlStyleConstructor({\n          image: new this.OlStyleRegularshapeConstructor({\n            ...shapeOpts,\n            points: 2,\n            angle: 2 * Math.PI - (Math.PI / 4)\n          })\n        });\n        break;\n      case 'shape://horline':\n        // openlayers does not seem to set a default stroke color,\n        // which is needed for regularshapes with radius2 = 0\n        if (shapeOpts.stroke === undefined) {\n          shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n            color: '#000'\n          });\n        }\n        olStyle = new this.OlStyleConstructor({\n          image: new this.OlStyleRegularshapeConstructor({\n            ...shapeOpts,\n            points: 2,\n            angle: Math.PI / 2\n          })\n        });\n        break;\n      // so far, both arrows are closed arrows. Also, shape is a regular triangle with\n      // all sides of equal length. In geoserver arrows only have two sides of equal length.\n      // TODO redefine shapes of arrows?\n      case 'shape://oarrow':\n      case 'shape://carrow':\n        olStyle = new this.OlStyleConstructor({\n          image: new this.OlStyleRegularshapeConstructor({\n            ...shapeOpts,\n            points: 3,\n            angle: Math.PI / 2\n          })\n        });\n        break;\n      case 'shape://slash':\n        // openlayers does not seem to set a default stroke color,\n        // which is needed for regularshapes with radius2 = 0\n        if (shapeOpts.stroke === undefined) {\n          shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n            color: '#000'\n          });\n        }\n        olStyle = new this.OlStyleConstructor({\n          image: new this.OlStyleRegularshapeConstructor({\n            ...shapeOpts,\n            points: 2,\n            angle: Math.PI / 4\n          })\n        });\n        break;\n      case 'shape://vertline':\n        // openlayers does not seem to set a default stroke color,\n        // which is needed for regularshapes with radius2 = 0\n        if (shapeOpts.stroke === undefined) {\n          shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n            color: '#000'\n          });\n        }\n        olStyle = new this.OlStyleConstructor({\n          image: new this.OlStyleRegularshapeConstructor({\n            ...shapeOpts,\n            points: 2,\n            angle: 0\n          })\n        });\n        break;\n      default:\n        if (OlStyleUtil.getIsFontGlyphBased(markSymbolizer)) {\n          olStyle = new this.OlStyleConstructor({\n            text: new this.OlStyleTextConstructor({\n              text: OlStyleUtil.getCharacterForMarkSymbolizer(markSymbolizer),\n              font: OlStyleUtil.getTextFontForMarkSymbolizer(markSymbolizer),\n              fill: shapeOpts.fill,\n              stroke: shapeOpts.stroke,\n              rotation: shapeOpts.rotation\n            })\n          });\n          break;\n        }\n        throw new Error('MarkSymbolizer cannot be parsed. Unsupported WellKnownName.');\n    }\n\n    if (Number.isFinite(opacity) && olStyle.getImage()) {\n      olStyle.getImage().setOpacity(opacity);\n    }\n\n    return olStyle;\n  }\n\n  /**\n   * Get the OL Style object  from an GeoStyler-Style IconSymbolizer.\n   *\n   * @param symbolizer  A GeoStyler-Style IconSymbolizer.\n   * @return The OL Style object\n   */\n  getOlIconSymbolizerFromIconSymbolizer(\n    symbolizer: IconSymbolizer,\n    feat?: OlFeature\n  ): OlStyle | OlStyleIcon | OlStyleFunction {\n    for (const key of Object.keys(symbolizer)) {\n      if (isGeoStylerFunction(symbolizer[key as keyof IconSymbolizer])) {\n        (symbolizer as any)[key] = OlStyleUtil.evaluateFunction((symbolizer as any)[key], feat);\n      }\n    }\n\n    const baseProps: OlStyleIconOptions = {\n      src: symbolizer.image as string,\n      crossOrigin: 'anonymous',\n      opacity: symbolizer.opacity as number,\n      width: symbolizer.size as number,\n      // Rotation in openlayers is radians while we use degree\n      rotation: (typeof(symbolizer.rotate) === 'number' ? symbolizer.rotate * Math.PI / 180 : undefined) as number,\n      displacement: symbolizer.offset as [number, number]\n    };\n    // check if IconSymbolizer.image contains a placeholder\n    const prefix = '\\\\{\\\\{';\n    const suffix = '\\\\}\\\\}';\n    const regExp = new RegExp(prefix + '.*?' + suffix, 'g');\n    const regExpRes = typeof(symbolizer.image) === 'string' ? symbolizer.image.match(regExp) : null;\n    if (regExpRes) {\n      // if it contains a placeholder\n      // return olStyleFunction\n      const olPointStyledIconFn = (feature: any) => {\n        let src: string = OlStyleUtil.resolveAttributeTemplate(feature, symbolizer.image as string, '');\n        // src can't be blank, would trigger ol errors\n        if (!src) {\n          src = symbolizer.image + '';\n        }\n        let image;\n        if (this.olIconStyleCache[src]) {\n          image = this.olIconStyleCache[src];\n          if (baseProps.rotation !== undefined) {\n            image.setRotation(baseProps.rotation);\n          }\n          if (baseProps.opacity !== undefined) {\n            image.setOpacity(baseProps.opacity);\n          }\n        } else {\n          image = new this.OlStyleIconConstructor({\n            ...baseProps,\n            src // order is important\n          });\n          this.olIconStyleCache[src] = image;\n        }\n        const style = new this.OlStyleConstructor({\n          image\n        });\n        return style;\n      };\n      return olPointStyledIconFn;\n    } else {\n      return new this.OlStyleConstructor({\n        image: new this.OlStyleIconConstructor({\n          ...baseProps\n        })\n      });\n    }\n  }\n\n  /**\n   * Get the OL Style object from an GeoStyler-Style LineSymbolizer.\n   *\n   * @param symbolizer A GeoStyler-Style LineSymbolizer.\n   * @return The OL Style object\n   */\n  getOlLineSymbolizerFromLineSymbolizer(symbolizer: LineSymbolizer, feat?: OlFeature): OlStyle | OlStyleStroke {\n    for (const key of Object.keys(symbolizer)) {\n      if (isGeoStylerFunction(symbolizer[key as keyof LineSymbolizer])) {\n        (symbolizer as any)[key] = OlStyleUtil.evaluateFunction((symbolizer as any)[key], feat);\n      }\n    }\n    const color = symbolizer.color as string;\n    const opacity = symbolizer.opacity as number;\n    const sColor = (color && opacity !== null && opacity !== undefined) ?\n      OlStyleUtil.getRgbaColor(color, opacity) : color;\n\n    return new this.OlStyleConstructor({\n      stroke: new this.OlStyleStrokeConstructor({\n        color: sColor,\n        width: symbolizer.width as number,\n        lineCap: symbolizer.cap as CapType,\n        lineJoin: symbolizer.join as JoinType,\n        lineDash: symbolizer.dasharray as number[],\n        lineDashOffset: symbolizer.dashOffset as number\n      })\n    });\n  }\n\n  /**\n   * Get the OL Style object from an GeoStyler-Style FillSymbolizer.\n   *\n   * @param symbolizer A GeoStyler-Style FillSymbolizer.\n   * @return The OL Style object\n   */\n  getOlPolygonSymbolizerFromFillSymbolizer(symbolizer: FillSymbolizer, feat?: OlFeature): OlStyle | OlStyleFill {\n    for (const key of Object.keys(symbolizer)) {\n      if (isGeoStylerFunction(symbolizer[key as keyof FillSymbolizer])) {\n        (symbolizer as any)[key] = OlStyleUtil.evaluateFunction((symbolizer as any)[key], feat);\n      }\n    }\n\n    const color = symbolizer.color as string;\n    const opacity = symbolizer.fillOpacity as number;\n    const fColor = color && Number.isFinite(opacity)\n      ? OlStyleUtil.getRgbaColor(color, opacity)\n      : color;\n\n    let fill = color\n      ? new this.OlStyleFillConstructor({color: fColor})\n      : undefined;\n\n    const outlineColor = symbolizer.outlineColor as string;\n    const outlineOpacity = symbolizer.outlineOpacity as number;\n    const oColor = (outlineColor && Number.isFinite(outlineOpacity))\n      ? OlStyleUtil.getRgbaColor(outlineColor, outlineOpacity)\n      : outlineColor;\n\n    const stroke = outlineColor || symbolizer.outlineWidth ? new this.OlStyleStrokeConstructor({\n      color: oColor,\n      width: symbolizer.outlineWidth as number,\n      lineDash: symbolizer.outlineDasharray as number[],\n    }) : undefined;\n\n    const olStyle = new this.OlStyleConstructor({\n      fill,\n      stroke\n    });\n\n    if (symbolizer.graphicFill) {\n      const pattern = this.getOlPatternFromGraphicFill(symbolizer.graphicFill);\n      if (!fill) {\n        fill = new this.OlStyleFillConstructor({});\n      }\n      if (pattern) {\n        fill.setColor(pattern);\n      }\n      olStyle.setFill(fill);\n    }\n\n    return olStyle;\n  }\n\n  /**\n   * Get the pattern for a graphicFill.\n   *\n   * This creates a CanvasPattern based on the\n   * properties of the given PointSymbolizer. Currently,\n   * only IconSymbolizer and MarkSymbolizer are supported.\n   *\n   * @param graphicFill The Symbolizer that holds the pattern config.\n   * @returns The created CanvasPattern, or null.\n   */\n  getOlPatternFromGraphicFill(graphicFill: PointSymbolizer): CanvasPattern | null {\n    let graphicFillStyle: any;\n    if (isIconSymbolizer(graphicFill)) {\n      graphicFillStyle = this.getOlIconSymbolizerFromIconSymbolizer(graphicFill);\n      const graphicFillImage = graphicFillStyle?.getImage();\n      graphicFillImage?.load(); // Needed for Icon type images with a remote src\n      // We can only work with the image once it's loaded\n      if (graphicFillImage?.getImageState() !== OlImageState.LOADED) {\n        return null;\n      }\n    } else if (isMarkSymbolizer(graphicFill)) {\n      graphicFillStyle = this.getOlPointSymbolizerFromMarkSymbolizer(graphicFill);\n    } else {\n      return null;\n    }\n\n    // We need to clone the style and image since we'll be changing the scale below (hack)\n    const graphicFillStyleCloned = graphicFillStyle.clone();\n    const imageCloned = graphicFillStyleCloned.getImage();\n\n    // Temporary canvas.\n    // TODO: Can/should we reuse an pre-existing one for efficiency?\n    const tmpCanvas: HTMLCanvasElement = document.createElement('canvas');\n    const tmpContext = tmpCanvas.getContext('2d') as CanvasRenderingContext2D;\n\n    // Hack to make scaling work for Icons.\n    // TODO: find a better way than this.\n    const scale = imageCloned.getScale() || 1;\n    const pixelRatio = scale;\n    imageCloned.setScale(1);\n\n    const size: [number, number] = imageCloned.getSize();\n\n    // Create the context where we'll be drawing the style on\n    const vectorContext = toContext(tmpContext, {\n      pixelRatio,\n      size\n    });\n\n    // Draw the graphic\n    vectorContext.setStyle(graphicFillStyleCloned);\n    const pointCoords = size.map(item  => item / 2);\n    vectorContext.drawGeometry(new OlGeomPoint(pointCoords));\n\n    // Create the actual pattern and return style\n    return tmpContext.createPattern(tmpCanvas, 'repeat');\n  }\n\n  /**\n   * Get the OL StyleFunction object from an GeoStyler-Style TextSymbolizer.\n   *\n   * @param {TextSymbolizer} textSymbolizer A GeoStyler-Style TextSymbolizer.\n   * @return {object} The OL StyleFunction\n   */\n  getOlTextSymbolizerFromTextSymbolizer(\n    symbolizer: TextSymbolizer,\n    feat?: OlFeature\n  ): OlStyle | OlStyleText | OlStyleFunction {\n    for (const key of Object.keys(symbolizer)) {\n      if (isGeoStylerFunction(symbolizer[key as keyof TextSymbolizer])) {\n        (symbolizer as any)[key] = OlStyleUtil.evaluateFunction((symbolizer as any)[key], feat);\n      }\n    }\n\n    const color = symbolizer.color as string;\n    const opacity = symbolizer.opacity as number;\n    const fColor = color && Number.isFinite(opacity)\n      ? OlStyleUtil.getRgbaColor(color, opacity)\n      : color;\n\n    const haloColor = symbolizer.haloColor as string;\n    const haloWidth = symbolizer.haloWidth as number;\n    const sColor = haloColor && Number.isFinite(opacity)\n      ? OlStyleUtil.getRgbaColor(haloColor, opacity)\n      : haloColor;\n\n    const baseProps: OlStyleTextOptions = {\n      font: OlStyleUtil.getTextFont(symbolizer),\n      fill: new this.OlStyleFillConstructor({\n        color: fColor\n      }),\n      stroke: new this.OlStyleStrokeConstructor({\n        color: sColor,\n        width: haloWidth ? haloWidth : 0 as number\n      }),\n      overflow: symbolizer.allowOverlap as boolean,\n      offsetX: (symbolizer.offset ? symbolizer.offset[0] : 0) as number,\n      offsetY: (symbolizer.offset ? symbolizer.offset[1] : 0) as number,\n      rotation: typeof(symbolizer.rotate) === 'number' ? symbolizer.rotate * Math.PI / 180 : undefined\n      // TODO check why props match\n      // textAlign: symbolizer.pitchAlignment,\n      // textBaseline: symbolizer.anchor\n    };\n\n    // check if TextSymbolizer.label contains a placeholder\n    const prefix = '\\\\{\\\\{';\n    const suffix = '\\\\}\\\\}';\n    const regExp = new RegExp(prefix + '.*?' + suffix, 'g');\n    let regExpRes;\n    if (!isGeoStylerStringFunction(symbolizer.label)) {\n      regExpRes = symbolizer.label ? symbolizer.label.match(regExp) : null;\n    }\n    if (regExpRes) {\n      // if it contains a placeholder\n      // return olStyleFunction\n      const olPointStyledLabelFn = (feature: any) => {\n\n        const text = new this.OlStyleTextConstructor({\n          text: OlStyleUtil.resolveAttributeTemplate(feature, symbolizer.label as string, ''),\n          ...baseProps\n        });\n\n        const style = new this.OlStyleConstructor({\n          text: text\n        });\n\n        return style;\n      };\n      return olPointStyledLabelFn;\n    } else {\n      // if TextSymbolizer does not contain a placeholder\n      // return OlStyle\n      return new this.OlStyleConstructor({\n        text: new this.OlStyleTextConstructor({\n          text: symbolizer.label as string,\n          ...baseProps\n        })\n      });\n    }\n  }\n\n}\n\nexport default OlStyleParser;\n"],"names":["e","t","l","n","s","f","i","r","style","functions","freeGlobal","global","_freeGlobal","require$$0","freeSelf","root","_root","Symbol","_Symbol","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","getRawTag","value","isOwn","tag","unmasked","result","_getRawTag","objectToString","_objectToString","require$$1","require$$2","nullTag","undefinedTag","baseGetTag","_baseGetTag","isArray","isArray_1","isObjectLike","isObjectLike_1","stringTag","isString","isString_1","numberTag","isNumber","isNumber_1","boolTag","isBoolean","isBoolean_1","__importDefault","this","mod","exports","isExpression","got","isFunctionCall","arg","isPropertyType","isScaleDenominator","isOperator","isComparisonOperator","isCombinationOperator","isNegationOperator","isFilter","isComparisonFilter","expectedLength","isCombinationFilter","index","isNegationFilter","isSymbolizer","isPointSymbolizer","isIconSymbolizer","isTextSymbolizer","isMarkSymbolizer","isLineSymbolizer","isFillSymbolizer","isRasterSymbolizer","isRule","_a","isRgbChannel","isGrayChannel","isGeoStylerNumberFunction","functionNames","isGeoStylerStringFunction","isGeoStylerBooleanFunction","isGeoStylerUnknownFunction","isGeoStylerFunction","__createBinding","o","m","k","k2","desc","__exportStar","p","OlImageState","BaseEvent","type","Event","ObjectEventType","Disposable","Disposable$1","equals","arr1","arr2","len1","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","target","listener","listeners","listenersForType","event","evt","dispatching","pendingRemovals","propagate","ii","pr","EventTarget","EventType","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","len","keys","unByKey","Observable$1","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","eventType","silent","source","BaseObject$1","ua","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","passive","options","messages","AssertionError","code","message","AssertionError$1","assert","assertion","errorCode","tmp_","create","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","set","transform","a","b","c","d","scale","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","containsXY","extent","createEmpty","createOrUpdate","minX","minY","maxX","maxY","dest","createOrUpdateEmpty","createOrUpdateFromCoordinate","coordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","extendXY","getCenter","getHeight","intersects","extent1","extent2","returnOrUpdate","METERS_PER_UNIT","Projection","tileGrid","worldExtent","func","Projection$1","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","resolution","point","PROJECTIONS","fromEPSG4326","input","output","dimension","length","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","add","projection","transforms","destination","transformFn","sourceCode","destinationCode","clamp","min","max","squaredDistance","x1","y1","x2","y2","dx","dy","toFixed","decimals","factor","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","getTransformFromProjections","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","j","rotate","anchor","anchorX","anchorY","deltaX","deltaY","translate","tmpTransform","createTransform","Geometry","revision","squaredTolerance","clone","closestPoint","minSquaredDistance","coord","tolerance","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","Geometry$1","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","coordinates","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","SimpleGeometry$1","deflateCoordinate","Point","squaredDx","OlGeomPoint","toSize","size","ImageStyle","pixelRatio","displacement","opacity","rotateWithView","rotation","OlStyleImage","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","toString","fromNamed","el","rgb","fromString","cacheSize","fromStringInternal_","asArray","g","hasAlpha","normalize","asColorLike","createCanvasContext2D","width","height","canvasPool","settings","canvas","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultLineWidth","RegularShape","fill","image","renderOptions","context","ImageState","stroke","lineJoin","strokeWidth","miterLimit","r1","r2","tmp","points","alpha","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","lineDash","lineDashOffset","strokeStyle","maxRadius","radius","radius2","startAngle","step","angle0","radiusC","OlStyleRegularshape","CircleStyle","OlStyleCircle","Fill","OlStyleFill","Stroke","lineCap","OlStyleStroke","Style","defaultGeometryFunction","geometry","renderer","text","feature","zIndex","OlStyle","DEFAULT_FILL_COLOR","Text","overflow","font","maxAngle","offsetX","offsetY","placement","repeat","textAlign","justify","textBaseline","padding","OlStyleText","IconImageCache","iconImage","src","crossOrigin","getKey","maxCacheSize","colorString","shared","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","error","taintedTestContext","IconImage","imageState","ctx","iconImageCache","calculateScale","wantedWidth","wantedHeight","Icon","getIconImage","onload","imageSize","iconImageSize","OlStyleIcon","colors","WELLKNOWNNAME_TTF_REGEXP","DUMMY_MARK_SYMBOLIZER_FONT","OlStyleUtil","rgbaColor","colorsOnly","red","green","blue","inColor","colorArr","rgbColorArr","idx","hex","symbolizer","fontWeight","fontStyle","search","parts","fontFamily","olFont","template","noValueFoundText","valueAdjust","val","attributeTemplatePrefix","attributeTemplateSuffix","regExp","regExpRes","res","noMatchCnt","args","regexArray","caseArgs","match","caseArg","splitStr","part","rule","filterHasFunction","styleHasFunction","_b","scaleDenominatorHasFunction","_c","_d","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","VectorContext$1","CanvasImmediateRenderer","viewRotation","userTransform","pixelCoordinates","localTransform","centerX","centerY","close","ends","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","endss","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","acc","CanvasImmediateRenderer$1","toContext","scaleTransform","_OlStyleParser","ol","olStyle","pointSymbolizer","olCircleStyle","olFillStyle","olStrokeStyle","olRegularStyle","markSymbolizer","olTextStyle","char","fontName","olIconStyle","dashArray","outlineDashArray","allowOverlap","label","fontSize","fontObj","parseFont","fontFamilies","olStyles","symbolizers","name","styleType","resolve","geoStylerStyle","unsupportedProperties","clonedStyle","capitalizeFirstLetter","rules","hasFilter","hasMinScale","_e","hasMaxScale","_h","_g","_f","hasScaleDenominator","hasFunctions","nrSymbolizers","hasTextSymbolizer","hasDynamicIconSymbolizer","olSymbolizer","olStyleFct","styles","dpi","mpu","inchesPerMeter","minScale","maxScale","isWithinScale","matchesFilter","symb","styleFromFct","filter","operatorMapping","operator","isNestedFilter","intermediate","restFilter","arg1","arg2","strokeColor","strokeOpacity","sColor","fillOpacity","fColor","shapeOpts","feat","baseProps","prefix","suffix","outlineColor","outlineOpacity","oColor","pattern","graphicFill","graphicFillStyle","graphicFillImage","graphicFillStyleCloned","imageCloned","tmpCanvas","tmpContext","vectorContext","pointCoords","item","haloColor","haloWidth","OlStyleParser"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67]}